{"version":3,"sources":["home.svg","arrowup.svg","enter.svg","newspaper.svg","components/TopBar.js","components/Button.js","components/CollectionPage.js","components/Validation.js","components/ErrorMsg.js","components/ButtonUp.js","components/Form.js","components/FeedInfo.js","components/Spinner.js","components/FeedPage.js","App.js","index.js"],"names":["module","exports","TopBar","props","className","to","src","require","alt","title","Button","text","CollectionPage","index","name","url","remove","onClick","Validation","inputData","feedData","emptyField","equalFeed","filter","item","equal","length","test","ErrorMsg","msg","scroll","animateScroll","ButtonUp","appear","href","scrollToTop","Form","useState","useInputData","error","setError","useFeedData","useInView","threshold","rootMargin","ref","entry","checkView","undefined","isIntersecting","HandleChange","e","target","value","prevInputData","RemoveFeed","x","indexOf","prevFeedData","localStorage","setItem","JSON","stringify","useEffect","getData","getItem","parse","GetFeedData","addCollection","map","k","key","onSubmit","preventDefault","handleError","type","placeholder","onChange","FeedInfo","feedTitle","feedLink","feedImg","feedDesc","feedDate","checkFeed","style","display","Spinner","parser","FeedPage","allFeed","setAllFeed","feedMainTitle","setFeedMainTitle","isLoading","setIsLoading","check","nameId","useParams","cancel","a","getFeed","find","feed","parseURL","err","resFeed","console","log","items","forEach","prevAllFeed","contentSnippet","enclosure","link","pubDate","feedInfoCollection","element","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7555c050.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.e7e3d09e.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowup.74050c57.svg\";","module.exports = __webpack_public_path__ + \"static/media/enter.46317646.svg\";","module.exports = __webpack_public_path__ + \"static/media/newspaper.9c95b6a2.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction TopBar(props) {\r\n   return (\r\n      <header className=\"header\">\r\n         <div className=\"header__wrapper\">\r\n            <h3>RSS App</h3>\r\n            <nav>\r\n               <Link to=\"/\">\r\n                  <img src={require(\"../home.svg\")} alt=\"Home\" title=\"Return to home page\" />\r\n               </Link>\r\n            </nav>\r\n         </div>\r\n      </header>\r\n   );\r\n}\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\r\n\r\nfunction Button(props) {\r\n   return <button className=\"button\">{props.text}</button>;\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CollectionPage({ index, name, url, remove }) {\r\n   return (\r\n      <div className=\"collectionPage\">\r\n         <h3>{name} </h3>\r\n         <h3 className=\"collectionPage__url\">{url}</h3>\r\n         <Link to={`/${name}`}>\r\n            <Button text=\"Open\" />\r\n         </Link>\r\n         <button className=\"button\" onClick={() => remove(index)}>\r\n            Delete\r\n         </button>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default CollectionPage;\r\n","const Validation = (inputData, feedData, emptyField) => {\r\n   if (feedData !== null) {\r\n      const equalFeed = feedData.filter(item => item.name === inputData.name);\r\n      const [equal] = equalFeed;\r\n      const regUrl = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/gm;\r\n\r\n      if (!inputData.name) {\r\n         return \"Name is required\";\r\n      } else if (inputData.name.length < 3 || inputData.name.length > 12) {\r\n         return \"Incorrect name length\";\r\n      }\r\n\r\n      if (!inputData.url) {\r\n         return \"URL is required\";\r\n      } else if (!regUrl.test(inputData.url)) {\r\n         return \"Wrong URL\";\r\n      }\r\n\r\n      if (equalFeed.length === 0) {\r\n         return;\r\n      } else if (inputData.name === equal.name) {\r\n         return \"Name already exist\";\r\n      }\r\n   } else {\r\n      return emptyField;\r\n   }\r\n};\r\n\r\nexport default Validation;\r\n","import React from \"react\";\r\n\r\nfunction ErrorMsg({ msg }) {\r\n   return (\r\n      <div className=\"errorMsg\">\r\n         <p>{msg}</p>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ErrorMsg;\r\n","import React from \"react\";\r\nvar Scroll = require(\"react-scroll\");\r\nvar scroll = Scroll.animateScroll;\r\n\r\nfunction ButtonUp(props) {\r\n   return (\r\n      <div className={`button-top ${props.appear}`}>\r\n         <a className=\"button-top__link\" href=\"#top\" onClick={scroll.scrollToTop}>\r\n            {\" \"}\r\n            <img className=\"button-top__return\" src={require(\"../arrowup.svg\")} alt=\"Arrow Up\" />\r\n         </a>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ButtonUp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport CollectionPage from \"./CollectionPage\";\r\nimport Validation from \"./Validation\";\r\nimport ErrorMsg from \"./ErrorMsg\";\r\nimport ButtonUp from \"./ButtonUp\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nfunction Form() {\r\n   const [inputData, useInputData] = useState({ name: \"\", url: \"\" });\r\n   const [error, setError] = useState(null);\r\n   const [feedData, useFeedData] = useState(null);\r\n   const [ref, inView, entry] = useInView({\r\n      threshold: 0,\r\n      rootMargin: \"-100px\"\r\n   });\r\n\r\n   const checkView = entry !== undefined && !entry.isIntersecting;\r\n   const emptyField = \"Complete the fields\";\r\n\r\n   const HandleChange = e => {\r\n      const { name, value } = e.target;\r\n      useInputData(prevInputData => {\r\n         return {\r\n            ...prevInputData,\r\n            [name]: value\r\n         };\r\n      });\r\n   };\r\n\r\n   const FeedUpdate = () => {\r\n      useFeedData(prevFeedData =>\r\n         prevFeedData !== null ? [...prevFeedData, inputData] : [inputData]\r\n      );\r\n   };\r\n\r\n   const FeedEmpty = () => {\r\n      useFeedData([]);\r\n   };\r\n\r\n   const HandleSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const handleError = Validation(inputData, feedData, emptyField);\r\n\r\n      if (handleError && handleError !== emptyField) {\r\n         setError(handleError);\r\n         return;\r\n      } else if (handleError === emptyField) {\r\n         setError(handleError);\r\n         FeedEmpty();\r\n      } else {\r\n         setError(null);\r\n         FeedUpdate();\r\n      }\r\n   };\r\n\r\n   const RemoveFeed = x => {\r\n      const index = feedData.indexOf(x);\r\n      useFeedData(prevFeedData => prevFeedData.filter(value => value !== prevFeedData[index]));\r\n      localStorage.setItem(\"feeds\", JSON.stringify(feedData));\r\n   };\r\n\r\n   const GetFeedData = () => {\r\n      const getData = localStorage.getItem(\"feeds\") || null;\r\n      useFeedData(JSON.parse(getData));\r\n   };\r\n\r\n   useEffect(() => {\r\n      GetFeedData();\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      localStorage.setItem(\"feeds\", JSON.stringify(feedData));\r\n   });\r\n\r\n   const addCollection =\r\n      feedData !== null &&\r\n      feedData.map((item, k) => (\r\n         <CollectionPage key={k} name={item.name} url={item.url} remove={RemoveFeed} index={item} />\r\n      ));\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={HandleSubmit} ref={ref}>\r\n            <label>Name:</label>\r\n            <input\r\n               type=\"text\"\r\n               value={inputData.name}\r\n               name=\"name\"\r\n               placeholder=\" Add name (3-12 characters)\"\r\n               onChange={HandleChange}\r\n            />\r\n            <label>URL:</label>\r\n            <input\r\n               type=\"url\"\r\n               value={inputData.url}\r\n               name=\"url\"\r\n               placeholder=\" Add URL\"\r\n               onChange={HandleChange}\r\n            />\r\n            {error && <ErrorMsg msg={error} />}\r\n            <Button text=\"Add\" />\r\n         </form>\r\n         {addCollection}\r\n         <ButtonUp appear={checkView ? \"appear\" : \"\"} />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FeedInfo({ feedTitle, feedLink, feedImg, feedDesc, feedDate }) {\r\n   const checkFeed = feedTitle !== \"\" ? \"block\" : \"none\";\r\n   return (\r\n      <div className=\"feedInfo__wrapper feedInfo__wrapper--clear\" style={{ display: checkFeed }}>\r\n         <p>{feedDate}</p>\r\n         <h2>{feedTitle}</h2>\r\n         <div className=\"feedInfo__desc\">\r\n            <a href={feedLink}>\r\n               <img\r\n                  alt=\"News link\"\r\n                  src={feedImg !== \"\" ? feedImg : require(\"../enter.svg\")}\r\n                  title=\"Move to original news page\"\r\n               ></img>\r\n            </a>\r\n         </div>\r\n         <p>{feedDesc}</p>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default FeedInfo;\r\n","import React from \"react\";\r\n\r\nfunction Spinner() {\r\n   return (\r\n      <div className=\"loading-page\">\r\n         <div className=\"loading-page__spinner\"></div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FeedInfo from \"./FeedInfo\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Spinner from \"./Spinner\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport ButtonUp from \"./ButtonUp\";\r\nlet Parser = require(\"rss-parser\");\r\nlet parser = new Parser();\r\n\r\nfunction FeedPage() {\r\n   const [allFeed, setAllFeed] = useState([\r\n      {\r\n         feedTitle: \"\",\r\n         feedDesc: \"\",\r\n         feedImg: \"\",\r\n         feedLink: \"\",\r\n         feedDate: \"\"\r\n      }\r\n   ]);\r\n   const [feedMainTitle, setFeedMainTitle] = useState(\"\");\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [ref, inView, entry] = useInView({\r\n      threshold: 0,\r\n      rootMargin: \"-100px\"\r\n   });\r\n\r\n   const check = entry !== undefined && !entry.isIntersecting;\r\n   const CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\r\n   const { nameId } = useParams();\r\n\r\n   useEffect(() => {\r\n      let cancel = false;\r\n      (async () => {\r\n         const getFeed = await JSON.parse(localStorage.getItem(\"feeds\"));\r\n         if (cancel) {\r\n            return;\r\n         }\r\n         const feed = await getFeed.find(item => item.name === nameId);\r\n         if (cancel) {\r\n            return;\r\n         }\r\n         try {\r\n            await parser.parseURL(CORS_PROXY + feed.url, (err, resFeed) => {\r\n               if (err) throw console.log(`${err} (Fetch problem)`);\r\n               if (cancel) {\r\n                  return;\r\n               }\r\n\r\n               setFeedMainTitle(resFeed.title);\r\n               resFeed.items.forEach(entry => {\r\n                  setAllFeed(prevAllFeed => {\r\n                     return [\r\n                        ...prevAllFeed,\r\n                        {\r\n                           feedTitle: entry.title !== undefined ? entry.title : \"\",\r\n                           feedDesc: entry.contentSnippet !== undefined ? entry.contentSnippet : \"\",\r\n                           feedImg: entry.enclosure !== undefined ? entry.enclosure.url : \"\",\r\n                           feedLink: entry.link !== undefined ? entry.link : \"\",\r\n                           feedDate: entry.pubDate !== undefined ? entry.pubDate : \"\"\r\n                        }\r\n                     ];\r\n                  });\r\n               });\r\n               setIsLoading(true);\r\n            });\r\n         } catch (err) {\r\n            console.log(`${err} Something went wrong...`);\r\n         }\r\n      })();\r\n      return () => {\r\n         cancel = true;\r\n      };\r\n   }, [nameId]);\r\n\r\n   const feedInfoCollection = allFeed.map((element, k) => (\r\n      <FeedInfo\r\n         key={k}\r\n         feedTitle={element.feedTitle}\r\n         feedDesc={element.feedDesc}\r\n         feedImg={element.feedImg}\r\n         feedLink={element.feedLink}\r\n         feedDate={element.feedDate}\r\n      />\r\n   ));\r\n\r\n   return (\r\n      <>\r\n         {isLoading ? (\r\n            <div className=\"feedInfo\">\r\n               <h1 className=\"feedInfo__mainTitle\" ref={ref}>\r\n                  <img src={require(\"../newspaper.svg\")} alt=\"Newspaper icon\" />\r\n                  {feedMainTitle}\r\n               </h1>\r\n               {feedInfoCollection}\r\n            </div>\r\n         ) : (\r\n            <Spinner />\r\n         )}\r\n         <ButtonUp appear={check ? \"appear\" : \"\"} />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default FeedPage;\r\n","import React from \"react\";\r\nimport \"./scss/style.scss\";\r\nimport TopBar from \"./components/TopBar\";\r\nimport Form from \"./components/Form\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport FeedPage from \"./components/FeedPage\";\r\n\r\nfunction App() {\r\n   return (\r\n      <div>\r\n         <TopBar />\r\n         <Switch>\r\n            <Route exact path=\"/\">\r\n               <div className=\"appWrapper\">\r\n                  <Form />\r\n               </div>\r\n            </Route>\r\n            <Route exact path=\"/:nameId\">\r\n               <FeedPage />\r\n            </Route>\r\n         </Switch>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n   <Router>\n      <App />\n   </Router>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}